paths:
  /api/auth/create:
    post:
      summary: Register a new user
      tags:
        - Authentication
      description: Create a new user account and return tokens(refresh token is in in the response cookie)
      requestBody:
        description: User registration data
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fullName
                - email
                - password
                - confirm_password
              properties:
                fullName:
                  type: string
                  description: User's full name
                  example: "John Doe"
                email:
                  type: string
                  format: email
                  description: User's email address
                  example: "john.doe@example.com"
                password:
                  type: string
                  description: User's password
                  format: password
                  example: "password123"
                confirm_password:
                  type: string
                  description: Password confirmation
                  format: password
                  example: "password123"
                phoneNumber:
                  type: string
                  description: User's phone number (optional)
                  example: "+1234567890"
                churchOfUser:
                  type: string
                  description: User's church affiliation (optional)
                  example: "First Baptist Church"
      responses:
        200:
          description: Account created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT access token
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      fullName:
                        type: string
                      email:
                        type: string
                      phoneNumber:
                        type: string
                      churchOfUser:
                        type: string
        400:
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid input data"
        409:
          description: Email already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Email already exists"
        500:
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal Server Error"

  /api/auth/login:
    post:
      summary: Login user
      tags:
        - Authentication
      description: Authenticate user and return access token
      requestBody:
        description: Login credentials
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: User's email
                  example: "john.doe@example.com"
                password:
                  type: string
                  format: password
                  description: User's password
                  example: "password123"
      responses:
        200:
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT access token
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      fullName:
                        type: string
                      email:
                        type: string
                      phoneNumber:
                        type: string
                      churchOfUser:
                        type: string
        400:
          description: Invalid credentials or validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid credentials"
        500:
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"

  /api/auth/refresh:
    post:
      tags:
        - Authentication
      summary: Refresh access token
      description: Get a new access token using refresh token from cookies
      responses:
        200:
          description: Successfully refreshed token
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    description: New JWT access token
        401:
          description: Refresh token not found or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Refresh token not found"
        500:
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access token could not be generated"
